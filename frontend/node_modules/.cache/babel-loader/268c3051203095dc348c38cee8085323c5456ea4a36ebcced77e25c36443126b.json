{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7ba5bd90\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"app\",\n  class: \"bg-main-background dark:bg-gray-800 min-h-screen\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_StudentSidebar = _resolveComponent(\"StudentSidebar\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_StudentSidebar)]);\n}","map":{"version":3,"names":["id","class","_createElementBlock","_hoisted_1","_createVNode","_component_StudentSidebar"],"sources":["D:\\Chesda ITE\\Project Practicum\\DTS\\Project\\DTS_Project\\frontend\\src\\App.vue"],"sourcesContent":["  <template>\r\n    <div id=\"app\" class=\"bg-main-background dark:bg-gray-800 min-h-screen\">\r\n      <StudentSidebar />\r\n    </div>\r\n  </template>\r\n\r\n\r\n  <script>\r\n  //import <<file name>> from \"path\"\r\n    import StudentSidebar from \"./components/student/StudentSidebar.vue\";\r\n    import NavBar from \"./components/student/StudentSidebar.vue\";\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        isDarkMode: false, // Default value; adjust based on the current theme\r\n      };\r\n    },\r\n    components: {\r\n      StudentSidebar,\r\n    },\r\n    mounted() {\r\n      this.initializeTheme();\r\n      this.setupThemeToggle();\r\n    },\r\n    methods: {\r\n      initializeTheme() {\r\n        this.isDarkMode =\r\n          localStorage.getItem('color-theme') === 'dark' ||\r\n          (!('color-theme' in localStorage) &&\r\n            window.matchMedia('(prefers-color-scheme: dark)').matches);\r\n\r\n        document.documentElement.classList.toggle('dark', this.isDarkMode);\r\n      },\r\n      setupThemeToggle() {\r\n        const themeToggleBtn = document.getElementById('theme-toggle');\r\n\r\n        if (themeToggleBtn) {\r\n          themeToggleBtn.addEventListener('click', () => {\r\n            this.isDarkMode = !this.isDarkMode;\r\n            document.documentElement.classList.toggle('dark', this.isDarkMode);\r\n            localStorage.setItem('color-theme', this.isDarkMode ? 'dark' : 'light');\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n\r\n  <style scoped>\r\n  /* Scoped styles */\r\n  \r\n  </style>"],"mappings":";;;EACSA,EAAE,EAAC,KAAK;EAACC,KAAK,EAAC;;;;uBAApBC,mBAAA,CAEM,OAFNC,UAEM,GADJC,YAAA,CAAkBC,yBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}